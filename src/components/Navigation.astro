---
import FirstLevelNavItem from './FirstLevelNavItem.astro'
import FirstLevelNavItemLink from './FirstLevelNavItemLink.astro'
import FourthLevelBackButton from './FourthLevelBackButton.astro'
import FourthLevelMenu from './FourthLevelMenu.astro'
import LanguageItem from './LanguageItem.astro'
import LanguageNavItem from './LanguageNavItem.astro'
import LanguageSubmenu from './LanguageSubmenu.astro'
import LanguageSubmenuWrapper from './LanguageSubmenuWrapper.astro'
import NavBreadCrumb from './NavBreadCrumb.astro'
import NavItem from './NavItem.astro'
import NavItemBacklink from './NavItemBacklink.astro'
import NavItemLink from './NavItemLink.astro'
import navigationData from '../data/navigationData.json'
import OverviewLink from './OverviewLink.astro'
import PrimaryButtonIcon from './PrimaryButtonIcon.astro'
import PrimaryButtonOnlyIcon from './PrimaryButtonOnlyIcon.astro'
import SecondLevelMenu from './SecondLevelMenu.astro'
import SecondLevelMenuWrapper from './SecondLevelMenuWrapper.astro'
import SecondLevelNavItem from './SecondLevelNavItem.astro'
import SecondLevelNavItemLink from './SecondLevelNavItemLink.astro'
import SubmenuWrapper from './SubmenuWrapper.astro'
import ThirdLevelMenu from './ThirdLevelMenu.astro'
import ThirdLevelNavItem from './ThirdLevelNavItem.astro'
---

<nav class='relative border-fernaoGreen 1440:static 1440:w-full' id='nav'>
  {/* First Level */}
  <ul
    class='absolute left-[50%] top-0 z-[1] mx-auto hidden w-full max-w-[394px] translate-x-[-50%] bg-fernaoBGWhite px-9 pt-8 1440:relative 1440:left-0 1440:top-0 1440:mx-0 1440:flex 1440:h-auto 1440:max-w-none 1440:translate-x-0 1440:items-center 1440:p-0'
    id='firstlevel-menu'
  >
    {
      navigationData.items.map((item) => {
        const hasSecondLevel = item.items?.length > 0

        if (!hasSecondLevel) {
          return <FirstLevelNavItemLink title={item.title} href={item.href} />
        } else {
          return (
            <FirstLevelNavItem
              ariaControls={`secondlevel-${item.id}`}
              id='firstlevel-button'
              title={item.title}
            >
              {/* Second Level */}
              <SecondLevelMenu id={`secondlevel-${item.id}`}>
                <NavItemBacklink
                  ariaControls={`secondlevel-${item.id}`}
                  title={item.title}
                  id='firstlevel-button'
                />
                <SecondLevelMenuWrapper>
                  {item.items?.map((item) => {
                    const hasThirdLevel = item.items?.length > 0

                    return hasThirdLevel ? (
                      <SecondLevelNavItem
                        ariaControls={`thirdlevel-${item.id}`}
                        id='secondlevel-button'
                        title={item.title}
                        bold={false}
                      >
                        {/* Third Level */}
                        <ThirdLevelMenu id={`thirdlevel-${item.id}`}>
                          <NavBreadCrumb title={`${item.parentTitle} > `} />
                          <NavItemBacklink
                            ariaControls={`thirdlevel-${item.id}`}
                            title={item.title}
                            id='secondlevel-button'
                          />
                          <SubmenuWrapper>
                            {item.items?.map((item) => {
                              const hasFourthLevel = item.items?.length > 0

                              return hasFourthLevel ? (
                                <ThirdLevelNavItem
                                  ariaControls={`fourthlevel-${item.id}`}
                                  id='thirdlevel-button'
                                  title={item.title}
                                  bold={false}
                                  text={item.text}
                                >
                                  {/* Fourth Level */}
                                  <FourthLevelMenu
                                    id={`fourthlevel-${item.id}`}
                                  >
                                    <NavBreadCrumb
                                      title={`${item.mainCategory} > ${item.parentTitle} > `}
                                    />
                                    <FourthLevelBackButton
                                      ariaControls={`fourthlevel-${item.id}`}
                                      title={item.title}
                                      id='thirdlevel-button'
                                      parentTitle={item.parentTitle}
                                    />
                                    <SubmenuWrapper>
                                      {item.items?.map((item) => {
                                        return (
                                          <NavItemLink
                                            href={item.href}
                                            title={item.title}
                                            text={item.text}
                                          />
                                        )
                                      })}

                                      <OverviewLink href={item.href}>
                                        {item.title}
                                      </OverviewLink>
                                    </SubmenuWrapper>
                                  </FourthLevelMenu>
                                </ThirdLevelNavItem>
                              ) : (
                                <NavItemLink
                                  href={item.href}
                                  title={item.title}
                                  text={item.text}
                                />
                              )
                            })}

                            <OverviewLink href={item.href}>
                              {item.title}
                            </OverviewLink>
                          </SubmenuWrapper>
                        </ThirdLevelMenu>
                      </SecondLevelNavItem>
                    ) : (
                      <SecondLevelNavItemLink
                        href={item.href}
                        title={item.title}
                      >
                        <ThirdLevelMenu id={`thirdlevel-${item.id}`}>
                          <NavBreadCrumb title={`${item.parentTitle} > `} />
                          <NavItemBacklink
                            ariaControls={`thirdlevel-${item.id}`}
                            title={item.title}
                            id='secondlevel-button'
                          />
                          <SubmenuWrapper>
                            <OverviewLink
                              href={item.href}
                              title={item.title}
                              text={item.text}
                            >
                              {item.title}
                            </OverviewLink>
                          </SubmenuWrapper>
                        </ThirdLevelMenu>
                      </SecondLevelNavItemLink>
                    )
                  })}
                </SecondLevelMenuWrapper>
              </SecondLevelMenu>
            </FirstLevelNavItem>
          )
        }
      })
    }

    <li class='mt-14 1440:hidden'>
      <PrimaryButtonIcon>Termin buchen</PrimaryButtonIcon>
    </li>

    <li class='1440:ml-auto'>
      <ul class='mt-4 1440:mt-0 1440:flex 1440:w-full 1440:items-center'>
        <LanguageNavItem
          title='Sprache'
          ariaControls='secondlevel-lang'
          id='lang-button'
          bold={false}
        >
          <LanguageSubmenu id='secondlevel-lang'>
            <NavItemBacklink
              ariaControls='secondlevel-lang'
              title='Sprache'
              id='secondlevel-button-back'
            />
            <LanguageSubmenuWrapper>
              <LanguageItem title='Deutsch' />
              <LanguageItem title='Englisch' />
            </LanguageSubmenuWrapper>
          </LanguageSubmenu>
        </LanguageNavItem>

        <NavItem
          title='Ãœber Uns'
          ariaControls='secondlevel-uber-uns'
          id='secondlevel-button'
          bold={false}
          className='1440:hidden'
        />
        <li class='1440:hidden'>
          <ul>
            <NavItemLink title='Jobs' href='/jobs' />
            <NavItemLink title='Datenschutz' href='/datenschutz' lightText />
            <NavItemLink title='Impressum' href='/impressum' lightText />
            <NavItemLink
              title='Cookie Policy'
              href='/cookie-policy'
              lightText
            />
          </ul>
        </li>
      </ul>
    </li>
    <li class='hidden 1440:ml-4 1440:block'>
      <PrimaryButtonOnlyIcon />
    </li>
  </ul>

  <script>
    const handleMenuButtonClick = () => {
      document.querySelector('#firstlevel-menu').classList.toggle('hidden')
      document.querySelector('#topContainer').classList.toggle('border-b-2')
      document.querySelector('#menu-open-icon').classList.toggle('hidden')
      document.querySelector('#menu-closed-icon').classList.toggle('hidden')
      // prevent background scrolling
      document.querySelector('body').classList.toggle('overflow-hidden')
      document.querySelector('#header').classList.toggle('fixed')
      document.querySelector('#nav').classList.toggle('h-[calc(100vh-64px)]')
      document.querySelector('#nav').classList.toggle('overflow-auto')

      // close all open submenus to reset menu
      resetMenus()
    }
    const isDesktop = window.innerWidth > 1440

    const handleFirstLevelClick = (id, button) => {
      if (isDesktop) {
        const isActiveFirstLevelBtnActive = button.classList.contains(
          'activeFirstLevelBtn'
        )
        const menus = document.querySelectorAll('ul[id^="secondlevel-"]')
        const buttons = document.querySelectorAll('button[id^="firstlevel-"]')
        const secondLevelButtons = button.nextElementSibling.querySelectorAll(
          'button[id^="secondlevel-"]'
        )
        const firstSecondLevelButton = secondLevelButtons[0]

        // Reset other open menus
        menus.forEach((menu) => {
          if (`#${menu.id}` !== id) {
            menu.classList.add('hidden')
            if (menu.nextElementSibling) {
              menu.nextElementSibling.classList.add('hidden')
            }
          }
        })

        // Reset other active states
        buttons.forEach((btn) => {
          if (`#${btn.id}` !== id) {
            btn.classList.remove('activeFirstLevelBtn')
          }
        })

        // Toggle active class on button
        button.classList.add('activeFirstLevelBtn')
        // Toggle active class on first second level button
        if (firstSecondLevelButton) {
          firstSecondLevelButton.classList.add('activeSecondLevelBtn')
        }

        // prevent background scrolling
        document.querySelector('body').classList.add('overflow-hidden')

        // Toggle fixed class on header
        document.querySelector('#header').classList.add('fixed')
        document.querySelector('#header').classList.add('border-b-2')
        document.querySelector('#header').classList.add('border-fernaoGreen')

        // Side effects for clicked twice
        if (isActiveFirstLevelBtnActive) {
          button.classList.remove('activeFirstLevelBtn')
          document.querySelector('body').classList.remove('overflow-hidden')

          // Reset other open menus and active states
          const thirdLevelMenu = document.querySelectorAll(
            'ul[id^="thirdlevel-"]'
          )
          const fourthLevelMenu = document.querySelectorAll(
            'ul[id^="fourthlevel-"]'
          )
          const activeSecondLevelBtn = document.querySelectorAll(
            'button[id^="secondlevel-"].activeSecondLevelBtn'
          )
          thirdLevelMenu.forEach((menu) => {
            menu.classList.add('hidden')
          })
          fourthLevelMenu.forEach((menu) => {
            menu.classList.add('hidden')
          })
          document.querySelector('#header').classList.remove('fixed')
          document.querySelector('#header').classList.remove('border-b-2')
          document
            .querySelector('#header')
            .classList.remove('border-fernaoGreen')
          if (activeSecondLevelBtn) {
            activeSecondLevelBtn.forEach((btn) => {
              btn.classList.remove('activeSecondLevelBtn')
            })
          }
        }
      } else {
        // On mobile, toggle menu with given id
        const targetMenu = document.querySelector(id)
        targetMenu.classList.toggle('hidden')
      }
    }

    const handleSecondLevelClick = (id, button) => {
      if (isDesktop) {
        // Reset other open menus
        const menus = document.querySelectorAll('ul[id^="thirdlevel-"]')
        const buttons = document.querySelectorAll('.activeSecondLevelBtn')
        menus.forEach((menu) => {
          if (`#${menu.id}` !== id) {
            menu.classList.add('hidden')
            if (menu.nextElementSibling) {
              menu.nextElementSibling.classList.add('hidden')
            }
          }
        })

        // Reset other active states
        buttons.forEach((btn) => {
          if (`#${btn.id}` !== id) {
            btn.classList.remove('activeSecondLevelBtn')
          }
        })

        button.classList.toggle('activeSecondLevelBtn')
        // Toggle menu
        document.querySelector(id).classList.toggle('hidden')
      } else {
        document.querySelector(id).classList.toggle('hidden')
      }
    }

    const handleClick = (id) => {
      document.querySelector(id).classList.toggle('hidden')
    }

    const resetMenus = () => {
      const menus = document.querySelectorAll(
        'ul[id^="secondlevel-"], ul[id^="thirdlevel-"], ul[id^="fourthlevel-"]'
      )
      menus.forEach((menu) => {
        menu.classList.add('hidden')
      })
    }

    const menuButton = document.querySelector('#menu-button')
    menuButton.addEventListener('click', handleMenuButtonClick)

    const langButton = document.querySelector('#lang-button')
    langButton.addEventListener('click', () => {
      if (isDesktop) {
        // Reset active states
        const firstLevelButton = document.querySelector('#firstlevel-button')
        const secondLevelButton = document.querySelector('#secondlevel-button')
        firstLevelButton.classList.remove('activeFirstLevelBtn')
        secondLevelButton.classList.remove('activeSecondLevelBtn')

        document.querySelector('body').classList.remove('overflow-hidden')
        document.querySelector('#header').classList.remove('fixed')
        document.querySelector('#header').classList.remove('border-b-2')
        document.querySelector('#header').classList.remove('border-fernaoGreen')
      }
      document.querySelector('#secondlevel-lang').classList.toggle('hidden')
    })

    const secondLevelButtons = document.querySelectorAll(
      '#secondlevel-button, #secondlevel-button-back'
    )
    secondLevelButtons.forEach((button) => {
      const id = button.getAttribute('aria-controls')
      button.addEventListener('click', () => {
        handleSecondLevelClick(`#${id}`, button)
      })
    })
    const firstlevelButtons = document.querySelectorAll('#firstlevel-button')
    firstlevelButtons.forEach((button) => {
      const id = button.getAttribute('aria-controls')
      button.addEventListener('click', () => {
        handleFirstLevelClick(`#${id}`, button)
      })
    })

    const buttons = document.querySelectorAll(
      '#thirdlevel-button, #thirdlevel-button-back'
    )
    buttons.forEach((button) => {
      const id = button.getAttribute('aria-controls')
      button.addEventListener('click', () => {
        handleClick(`#${id}`)
      })
    })

    window.addEventListener('resize', () => {
      if (window.innerWidth > 1440) {
        // reset mobile active states
      } else {
        document.querySelector('body').classList.remove('overflow-hidden')
        document.querySelector('#header').classList.remove('fixed')
        document.querySelector('#header').classList.remove('border-b-2')
        document.querySelector('#header').classList.remove('border-fernaoGreen')
        const firstLevelButtons = document.querySelectorAll(
          '.activeFirstLevelBtn'
        )
        const secondLevelButtons = document.querySelectorAll(
          '.activeSecondLevelBtn'
        )
        firstLevelButtons.forEach((btn) => {
          btn.classList.remove('activeFirstLevelBtn')
        })
        secondLevelButtons.forEach((btn) => {
          btn.classList.remove('activeSecondLevelBtn')
        })
        const menus = document.querySelectorAll(
          'ul[id^="secondlevel-"], ul[id^="thirdlevel-"], ul[id^="fourthlevel-"]'
        )
        menus.forEach((menu) => {
          menu.classList.add('hidden')
        })
      }
    })

    document.addEventListener('click', (e) => {
      const nav = document.querySelector('#nav')

      if (window.innerWidth < 1440) {
        return
      }

      if (!nav.contains(e.target)) {
        const firstLevelButtons = document.querySelectorAll(
          '.activeFirstLevelBtn'
        )
        const secondLevelButtons = document.querySelectorAll(
          '.activeSecondLevelBtn'
        )
        firstLevelButtons.forEach((btn) => {
          btn.classList.remove('activeFirstLevelBtn')
        })
        secondLevelButtons.forEach((btn) => {
          btn.classList.remove('activeSecondLevelBtn')
        })

        const thirdLevelMenu = document.querySelectorAll(
          'ul[id^="thirdlevel-"]'
        )
        const fourthLevelMenu = document.querySelectorAll(
          'ul[id^="fourthlevel-"]'
        )
        thirdLevelMenu.forEach((menu) => {
          menu.classList.add('hidden')
        })
        fourthLevelMenu.forEach((menu) => {
          menu.classList.add('hidden')
        })
      }
    })
  </script>
</nav>
